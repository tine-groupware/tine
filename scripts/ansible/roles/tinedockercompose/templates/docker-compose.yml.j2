version: '2'
services:
  db:
    image: mariadb:10.6
    command: --max-allowed-packet=209715210
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: &MYSQL_DATABASE tine
      MYSQL_USER: &MYSQL_USER tine
      MYSQL_PASSWORD: &MYSQL_PASSWORD tine
    ### use volume for persistent DB
    volumes:
      - "{{ tinedockercompose_db_path }}:/var/lib/mysql"
    networks:
      - internal_network

  web:
    image: {{ tinedockercompose_tine_image }}
    restart: always
    depends_on:
      - db
      - cache
    environment:
      TINE20_DATABASE_HOST: db
      TINE20_DATABASE_DBNAME: *MYSQL_DATABASE
      TINE20_DATABASE_USERNAME: *MYSQL_USER
      TINE20_DATABASE_PASSWORD: *MYSQL_PASSWORD
      TINE20_DATABASE_TABLEPREFIX: tine20_
      TINE20_CACHING_BACKEND: Redis
      TINE20_CACHING_REDIS_HOST: cache
      TINE20_ACTIONQUEUE_HOST: cache
      TINE20_SESSION_BACKEND: Redis
      TINE20_SESSION_HOST: cache
      TINE20_CREDENTIALCACHESHAREDKEY: change_me
      TINE20_SETUPUSER_USERNAME: tinesetup
      TINE20_SETUPUSER_PASSWORD: {{ tinedockercompose_tinesetuppw }}
      TINE20_LOGGER_PRIORITY: "5"
      ### install+update tine automatically
      # TINE_INSTALL: "true"
    volumes:
      - "{{ tinedockercompose_confd_path }}:/etc/tine20/conf.d"
      - "{{ tinedockercompose_files_path }}:/var/lib/tine20/files"
      - "{{ tinedockercompose_backup_path }}:/var/lib/tine20/backup"
    networks:
      - external_network
      - internal_network
{% if tinedockercompose_traefik_host is not defined %}
    ports:
      - "{{ tinedockercompose_ports }}"
{% endif %}
{% if tinedockercompose_extra_hosts is defined %}
    extra_hosts:
      - "{{ tinedockercompose_extra_hosts }}"
{% endif %}
{% if tinedockercompose_traefik_host is defined %}
    ### for traefik support (see https://doc.traefik.io/traefik/providers/docker/)
    labels:
      - "traefik.enable=true"
      ### traefik doc: The regexp name (name in the example) is an arbitrary value, that exists only for historical reasons.
      - "traefik.http.routers.web.rule=HostRegexp(`{name:.+}`) || Host(`{{ tinedockercompose_traefik_host }}`)"
      - "traefik.http.routers.web.entrypoints=websecure"
{% if tinedockercompose_traefik_cert is defined and tinedockercompose_traefik_key is defined %}
      - "traefik.http.routers.web.tls=true"
{% else %}
      - "traefik.http.routers.web.tls.certresolver=http01"
{% endif %}
      - "traefik.http.services.web.loadbalancer.server.port=80"
{% endif %}

  cache:
    image: redis:5.0.5
    restart: always
    networks:
      - internal_network

{% if tinedockercompose_docservice_version is defined %}
  docservice:
    image: tinegroupware/document-preview-service:{{ tinedockercompose_docservice_version }}
    networks:
      - internal_network
{% endif %}

{% if tinedockercompose_documentserver is defined %}
  broadcasthub:
    image: tinegroupware/broadcasthub:0.6
    networks:
      - external_network
      - internal_network
    ports:
      - "5001:80"
    environment:
      REDIS_URL: redis://cache:6379
      REDIS_CHANNEL: broadcasthub
      TINE20_JSON_API_URL: http://localhost
      AUTH_TIMEOUT: 5000
      WS_PORT: 80
      DEBUG: '*'
      DEBUG_DEFAULT_LOGGING: "on"
      DEBUG_LOG_TO_FILE: "off"
      DEBUG_LOG_FILE: ../../stdout.log
{% endif %}

{% if tinedockercompose_documentserver is defined %}
  documentserver:
    image: onlyoffice/documentserver:latest
    ports:
      - "4020:80"
    environment:
      JWT_ENABLED: "true"
      JWT_SECRET: "change_me_also_define_in_tine_cfg"
    networks:
      - external_network
      - internal_network
{% endif %}

{% if tinedockercompose_clamav is defined %}
  clamav:
    image: tiredofit/clamav
    container_name: clamav
    environment:
      - ZABBIX_HOSTNAME=clamav
    # need to be created on the host
    volumes:
      - "clamav_files:/data"
    networks:
      - internal_network
{% endif %}

{% if tinedockercompose_traefik_host is defined %}
  traefik:
    image: "traefik:v2.6"
    restart: always
    container_name: "traefik"
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.websecure.address=:443"
{% if tinedockercompose_traefik_cert is defined and tinedockercompose_traefik_key is defined %}
      - "--providers.file.directory=/etc/traefik/dynamic_conf"
      - "--providers.file.watch=true"
{% else %}
      - "--certificatesresolvers.http01.acme.httpchallenge=true"
      - "--certificatesresolvers.http01.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.http01.acme.storage=/letsencrypt/acme.json"
{% endif %}
      # - "--log.level=DEBUG"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - internal_network
      - external_network
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
{% if tinedockercompose_traefik_cert is defined and tinedockercompose_traefik_key is defined %}
      - "{{ tinedockercompose_path }}/traefik/certs/:/certs/:ro"
      - "{{ tinedockercompose_path }}/traefik/traefik.yml:/etc/traefik/dynamic_conf/conf.yml:ro"
{% else %}
      - "./letsencrypt:/letsencrypt"
{% endif %}
{% endif %}

### optional: use docker volumes instead of directory mounts
# volumes:
#  clamav_files:

networks:
  external_network:
  internal_network:
    internal: true
