#!/usr/bin/env bash

# check if all mandatory vars are set
mandatory_vars="TINE20_DATABASE_HOST TINE20_DATABASE_DBNAME TINE20_DATABASE_USERNAME TINE20_DATABASE_PASSWORD"

test "$TINE20_CACHING_BACKEND" = Redis && mandatory_vars="$mandatory_vars TINE20_CACHING_REDIS_HOST"
test "$TINE20_SESSION_BACKEND" = Redis && mandatory_vars="$mandatory_vars TINE20_SESSION_HOST"

if test "$TINE20_CHECK" != false; then
  for var in $mandatory_vars; do
    if [ -z "${!var}" ]; then
      echo "Mandatory environment variable $var not set."
      error=true
    fi
  done

  test "$error" = true && exit 1
fi

set -e

# generate config files
gomplate --config /etc/gomplate/config.yaml
if ! [ -f /etc/tine20/setup.htpasswd ]; then echo "$TINE20_SETUP_HTPASSWD" > /etc/tine20/setup.htpasswd; fi

# await database availability
su tine20 -c "/usr/local/bin/tine20_await_db"

if test "$TINE20_INSTALL" == "true"; then
    # install tine20 if it is not installed or update it and 
    if su tine20 -c "php ${TINE20ROOT}/tine20/setup.php --config ${TINE20_CONFIG_PATH:-"/etc/tine20/config.inc.php"} --is_installed"; then
      # load config from env vars TINE20__<app>_<property>
      su tine20 -c "php ${TINE20ROOT}/tine20/setup.php --config ${TINE20_CONFIG_PATH:-"/etc/tine20/config.inc.php"} --config_from_env"
      su tine20 -c "php ${TINE20ROOT}/tine20/setup.php --config ${TINE20_CONFIG_PATH:-"/etc/tine20/config.inc.php"} --update"
    else
      /usr/local/bin/tine20_install
      # load config from env vars TINE20__<app>_<property>
      su tine20 -c "php ${TINE20ROOT}/tine20/setup.php --config ${TINE20_CONFIG_PATH:-"/etc/tine20/config.inc.php"} --config_from_env"
    fi
fi

/usr/bin/supervisord -c /etc/supervisord.conf --nodaemon