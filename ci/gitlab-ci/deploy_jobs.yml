# ============ stage: deploy ===========================

# pushes built-commit as built to our gitlab registry.
# They can be accessed essayer.
# They are pushed on every change of a major branch.
deploy-built-image-to-gitlab:
  extends: .abstract_jobs.docker
  stage: deploy
  script:
    - ${CI_BUILDS_DIR}/${CI_PROJECT_NAMESPACE}/tine20/ci/scripts/push_image_to_gitlab.sh built
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /deploy-built-image-to-gitlab/
    - if: $DEPLOY_BUILT_IMAGE_TO_GITLAB == "false"
      when: never
    - if: $DEPLOY_BUILT_IMAGE_TO_GITLAB == "true"
    - if: $CI_PIPELINE_SOURCE == "schedule" && $DEPLOY_BUILD_IMAGE_TO_GITLAB_SCHEDULE != "false"
  timeout: 20m
  interruptible: false
deploy-built-image-to-gitlab-arm64:
  services:
    - name: ${UTIL_REGISTRY}/docker:20.10.21-dind-r1
      alias: docker
  image: ${UTIL_REGISTRY}/docker:20.10.21-r1
  extends: deploy-built-image-to-gitlab
  variables:
    IMAGE_TAG_PLATFORM_POSTFIX: -arm64
    IMAGE_TAG: ${CI_PIPELINE_ID}-${PHP_VERSION}-arm64
  tags:
    - arm64
  rules:
    - if: $DEPLOY_BUILT_IMAGE_TO_GITLAB_ARM64 == "false"
      when: never
    - if: $DEPLOY_BUILT_IMAGE_TO_GITLAB_ARM64 == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /deploy-built-image-to-gitlab-arm64/
    - if: $CI_PIPELINE_SOURCE == "schedule" && $DEPLOY_BUILD_IMAGE_TO_GITLAB_ARM64_SCHEDULE == "true"

# pushes dev-commit as dev to our gitlab registry.
# They can be accessed essayer.
# They are pushed on every change of a major branch.
deploy-dev-image-to-gitlab:
  extends: .abstract_jobs.docker
  stage: deploy
  script:
    - ${CI_BUILDS_DIR}/${CI_PROJECT_NAMESPACE}/tine20/ci/scripts/push_image_to_gitlab.sh dev
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /deploy-dev-image-to-gitlab/
    - if: $DEPLOY_DEV_IMAGE_TO_GITLAB == "false"
      when: never
    - if: $DEPLOY_DEV_IMAGE_TO_GITLAB == "true"
    - if: $CI_PIPELINE_SOURCE == "schedule" && $DEPLOY_DEV_IMAGE_TO_GITLAB_SCHEDULE != "false"
  timeout: 20m
  interruptible: false
deploy-dev-image-to-gitlab-arm64:
  services:
    - name: ${UTIL_REGISTRY}/docker:20.10.21-dind-r1
      alias: docker
  image: ${UTIL_REGISTRY}/docker:20.10.21-r1
  extends: deploy-dev-image-to-gitlab
  variables:
    IMAGE_TAG_PLATFORM_POSTFIX: -arm64
    IMAGE_TAG: ${CI_PIPELINE_ID}-${PHP_VERSION}-arm64
  tags:
    - arm64
  rules:
    - if: $DEPLOY_DEV_IMAGE_TO_GITLAB_ARM64 == "false"
      when: never
    - if: $DEPLOY_DEV_IMAGE_TO_GITLAB_ARM64 == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /deploy-dev-image-to-gitlab-arm64/
    - if: $CI_PIPELINE_SOURCE == "schedule" && $DEPLOY_DEV_IMAGE_TO_GITLAB_ARM64_SCHEDULE == "true"

# pushing built-commit as tine20/tine20 to dockerhub.
# The tag is also overwritten and set to $DOCKERHUB_TAG
# This job should only be triggered by a schedule or a manual pipeline trigger
deploy-dev-image-to-dockerhub:
  extends: .abstract_jobs.docker
  stage: deploy
  script:
    - !reference [.lib, script]
    - docker_hub_deploy dev dev $DOCKERHUB_TAG
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $CI_COMMIT_REF_NAME =~ /(^feat)|(^pu)|(change)/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $DEPLOY_DEV_IMAGE_TO_DOCKERHUB == "true"
  timeout: 20m
  interruptible: false

deploy-built-image-to-dockerhub:
  extends: .abstract_jobs.docker
  stage: deploy
  script:
    - !reference [.lib, script]
    - docker_hub_deploy_with_tag built tine $DOCKERHUB_TAG
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $CI_COMMIT_REF_NAME =~ /(^feat)|(^pu)|(change)/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $DEPLOY_BUILT_IMAGE_TO_DOCKERHUB == "true"
    - if: $CI_COMMIT_TAG
  timeout: 20m
  interruptible: false

deploy-customer-image-to-registry:
  extends: .abstract_jobs.docker
  stage: deploy
  script:
    - !reference [.lib, script]
    - docker login --username $CUSTOMER_IMAGE_REGISTRY_USERNAME --password $CUSTOMER_IMAGE_REGISTRY_PASSWORD $CUSTOMER_IMAGE_REGISTRY_REPO
    - docker_registry_release_image built $CUSTOMER_IMAGE_REGISTRY_REPO
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /deploy-customer-image-to-registry/
    - if: $DEPLOY_CUSTOMER_IMAGE_TO_REGISTRY != "true"
      when: never
    - if: $CI_COMMIT_TAG
  timeout: 20m
  interruptible: false

release-to-gitlab:
  extends: .abstract_jobs.docker
  variables:
    GIT_DEPTH: 100
  stage: deploy
  needs:
    - docker_build_packages
  before_script:
    # todo move to docker image
    - wget https://gitlab.com/api/v4/projects/16573099/packages/generic/release-cli/v0.10.0/release-cli-linux-amd64
    - mv release-cli-linux-amd64 /usr/local/bin/release-cli
    - chmod +x /usr/local/bin/release-cli
  script:
    - !reference [.lib, script]
    - release_to_gitlab
  rules:
    - if: $CI_COMMIT_TAG
    - when: never
  timeout: 20m
  interruptible: true

push-to-vpackages:
  extends: .abstract_jobs.docker
  stage: deploy
  before_script:
    - apk add openssh
    - eval $(ssh-agent -s)
    - echo "$VPACKAGES_DEPLOY_KEY" | tr -d '\r' | ssh-add -
  script:
    - !reference [.lib, script]
    - packaging_push_to_vpackages
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /push-to-vpackages/
      when: manual
    - if: $PUSH_TO_VPACKAGES != "true"
      when: never
    - if: $CI_COMMIT_TAG
  timeout: 20m
  interruptible: false

release-packages-to-gitlab:
  extends: .abstract_jobs.docker
  stage: deploy
  script:
    - !reference [.lib, script]
    - packaging_gitlab_set_current_link
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /release-packages-to-gitlab/
      when: manual
    - if: $CI_COMMIT_TAG
  timeout: 20m
  interruptible: false

release-packages-to-github:
  extends: .abstract_jobs.docker
  stage: deploy
  script:
    - !reference [.lib, script]
    - packaging_push_package_to_github
  rules:
    - if: $MAJOR_COMMIT_REF_NAME != "main"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /release-packages-to-github/
      when: manual
    - if: $CI_COMMIT_TAG
  timeout: 20m
  interruptible: false

trigger-release:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  image: ${UTIL_REGISTRY}/docker:19.03.1-r3
  needs: []
  script:
    - !reference [.lib, script]
    - release_tag
  rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /trigger-release/
    - if: $TRIGGER_RELEASE == "false"
      when: never
    - if: $TRIGGER_RELEASE == "true"
  timeout: 20m
  interruptible: false