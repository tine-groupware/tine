.js-e2e-tests-source:
  extends: .abstract_jobs.test
  stage: test
  needs:
    - docker_build_source
  variables:
    KUBERNETES_CPU_REQUEST: $ABSTRACT_JOBS_E2E_TEST_KUBERNETES_CPU_REQUEST
    KUBERNETES_CPU_LIMIT: $ABSTRACT_JOBS_E2E_TEST_KUBERNETES_CPU_LIMIT
    KUBERNETES_MEMORY_REQUEST: $ABSTRACT_JOBS_E2E_TEST_KUBERNETES_MEMORY_REQUEST
    KUBERNETES_MEMORY_LIMIT: $ABSTRACT_JOBS_E2E_TEST_KUBERNETES_MEMORY_LIMIT
    KUBERNETES_HELPER_CPU_REQUEST: $ABSTRACT_JOBS_E2E_TEST_KUBERNETES_HELPER_CPU_REQUEST
    KUBERNETES_HELPER_CPU_LIMIT: $ABSTRACT_JOBS_E2E_TEST_KUBERNETES_HELPER_CPU_LIMIT
    KUBERNETES_HELPER_MEMORY_REQUEST: $ABSTRACT_JOBS_E2E_TEST_KUBERNETES_HELPER_MEMORY_REQUEST
    KUBERNETES_HELPER_MEMORY_LIMIT: $ABSTRACT_JOBS_E2E_TEST_KUBERNETES_HELPER_MEMORY_LIMIT
    KUBERNETES_SERVICE_CPU_REQUEST: $ABSTRACT_JOBS_E2E_TEST_KUBERNETES_SERVICE_CPU_REQUEST
    KUBERNETES_SERVICE_CPU_LIMIT: $ABSTRACT_JOBS_E2E_TEST_KUBERNETES_SERVICE_CPU_LIMIT
    KUBERNETES_SERVICE_MEMORY_REQUEST: $ABSTRACT_JOBS_E2E_TEST_KUBERNETES_SERVICE_MEMORY_REQUEST
    KUBERNETES_SERVICE_MEMORY_LIMIT: $ABSTRACT_JOBS_E2E_TEST_KUBERNETES_SERVICE_MEMORY_LIMIT
    TEST_DOCKER: "true"
    TEST_BROWSER_LANGUAGE: en
    TINE20_INSTALL_LANG: de
    ARG_COPY_SOURCE: "true"
    ARG_IMAGE: test-source
    TINE20ROOT: ${CI_BUILDS_DIR}/${CI_PROJECT_NAMESPACE}/tine20
    WAIT_FOR_DB_TIMEOUT: '120'
  services:
    - !reference [.lib-services, db_service]
    - !reference [.lib-services, redis_service]
    - !reference [.lib-services, mail_service]
    - name: ${REGISTRY}/${ARG_IMAGE}-commit:${IMAGE_TAG}
      alias: tine
      entrypoint:
        !reference [.lib, entry_points, tine_as_a_service]
  image:
    name: dockerregistry.metaways.net/tine20/tine20/puppeteer:1.0.4
  before_script:
    # clone tine repo if test is run for a custom app. the tine repo will in any case be under $TINE20ROOT
    - if test "${CI_PROJECT_NAME}" != "tine20"; then git clone -b $TINE20_BRANCH --single-branch --depth 1 $TINE20_REPO_URL $TINE20ROOT; fi
    - cd $TINE20ROOT; git submodule init; git submodule update
    - touch ${CI_BUILDS_DIR}/${CI_PROJECT_NAMESPACE}/tine20/signal_files_ready
    # install e2e test dependencies
    - npm --prefix $TINE20ROOT/tests/e2etests/ install
    # wait for service to become ready
    - echo -n 'wait for signal_tine_ready ...'; while [ ! -f ${CI_BUILDS_DIR}/${CI_PROJECT_NAMESPACE}/tine20/signal_tine_ready ]; do sleep 1; done; echo ' done'
    # todo wait for 
    - if [ -f ${CI_BUILDS_DIR}/${CI_PROJECT_NAMESPACE}/tine20/signal_wait_for_database_failed ]; then echo "waiting for database failed"; exit 1; fi
    - if [ -f ${CI_BUILDS_DIR}/${CI_PROJECT_NAMESPACE}/tine20/signal_demo_data_install_failed ]; then echo "demo data install failed"; exit 1; fi
  script:
    - env
    - |
      if [ "${TINE20_BUILDTYPE}" == "DEVELOPMENT" ]; then
        export TEST_URL=http://tine:10443;
      else
        export TEST_URL=http://tine:80;
      fi
    - while ! wget $TEST_URL; do sleep 1; done
    - echo TEST_URL=${TEST_URL}
    - export TEST_ENVIROMENT=""
    - cd $TINE20ROOT/tests/e2etests
    - npm test -- $JS_E2E_TEST_FILTER --reporters=default --reporters=jest-junit
  after_script:
    - cp ${CI_BUILDS_DIR}/${CI_PROJECT_NAMESPACE}/tine20/tests/e2etests/junit.xml ${CI_PROJECT_DIR}/junit.xml
  artifacts:
    when: always
    reports:
      junit: ${CI_PROJECT_DIR}/junit.xml
    paths:
      - ${CI_PROJECT_DIR}/tine20.log
      - ${CI_PROJECT_DIR}/phpunit-report.xml
      - ${CI_PROJECT_DIR}/tests/e2etests/screenshots/Error/
    expire_in: 7 day
  interruptible: true
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $JS_E2E_TESTS_SOURCE == "false"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /skip-js-e2e-tests-source/
      when: never
    - if: $JS_E2E_TESTS_SOURCE == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $JS_E2E_TESTS_SOURCE_MERGE_REQUEST != "false"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /js-e2e-tests-source/
    - if: $PIPELINE_TYPE =~ /default-tests/
    - if: $PIPELINE_TYPE =~ /mr-tests/
    - if: $PIPELINE_TYPE =~ /e2e-tests/
    - if: $CI_COMMIT_TAG
js-e2e-tests-source:
  extends: .js-e2e-tests-source
  rules:
    - if: $JS_E2E_TESTS_SOURCE_TYPE != "sequential"
      when: never
    - if: $JS_E2E_TESTS_SOURCE_SAVE_SCREENSHOTS == "true"
      when: never
    - !reference [.js-e2e-tests-source, rules]
js-e2e-tests-source-save-screenshots:
  extends: .js-e2e-tests-source
  artifacts:
    when: always
    reports:
      junit: ${CI_PROJECT_DIR}/junit.xml
    paths:
      - ${CI_PROJECT_DIR}/tine20.log
      - ${CI_PROJECT_DIR}/phpunit-report.xml
      - ${CI_PROJECT_DIR}/tests/e2etests/screenshots/
    expire_in: 7 day
  rules:
    - if: $JS_E2E_TESTS_SOURCE_TYPE != "sequential"
      when: never
    - if: $JS_E2E_TESTS_SOURCE_SAVE_SCREENSHOTS != "true"
      when: never
    - !reference [.js-e2e-tests-source, rules]
js-e2e-tests-source-php-version-matrix:
  extends: .js-e2e-tests-source
  variables:
    IMAGE_TAG: ${CI_PIPELINE_ID}-${PHP_VERSION}
  needs:
    - 'docker_build_source_matrix: [7.4]'
    - 'docker_build_source_matrix: [8.0]'
    - 'docker_build_source_matrix: [8.1]'
  parallel:
    matrix:
      - PHP_VERSION:
          - "7.4"
          - "8.0"
          - "8.1"
  rules:
    - if: $PIPELINE_TYPE =~ /matrix-tests/
    - if: $JS_E2E_TESTS_SOURCE_TYPE != "matrix"
      when: never
    - !reference [.js-e2e-tests-source, rules]