check-php-version:
  extends: .abstract_jobs.copy_source
  stage: test
  variables:
    ARG_IMAGE: test-source
  needs:
    - docker_build_source
  script:
    - echo "PHP version shoud be ${PHP_VERSION}."
    - php -r "echo 'PHP version is'.PHP_MAJOR_VERSION.'.'.PHP_MINOR_VERSION;"
    - php -r "if (version_compare(PHP_MAJOR_VERSION.'.'.PHP_MINOR_VERSION, '${PHP_VERSION}', '!=')) exit(1);"
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $CHECK_PHP_VERSION == "never"
      when: never
    - if: $RUN_ALL_TESTS == "true"
      when: on_success
    - if: $CHECK_PHP_VERSION == "true"
      when: on_success
    - when: never
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $CHECK_PHP_VERSION == "false"
      when: never
    - if: $CHECK_PHP_VERSION == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CHECK_PHP_VERSION_MERGE_REQUEST == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /test-with-health-check/
    - if: $CI_PIPELINE_SOURCE == "schedule" && $CHECK_PHP_VERSION_SCHEDULE != "false"
    - if: $CI_COMMIT_TAG
  allow_failure: true
  timeout: 20m # time run: 4m
  interruptible: true

phpstan-analysis:
  extends: .abstract_jobs.copy_source
  stage: test
  variables:
    ARG_IMAGE: test-source
    ARG_COPY_SOURCE: "true"
  needs:
    - docker_build_source
  script:
    - cd $TINE20ROOT
    - mkdir -p ci/phpstan
    - cp ${CI_BUILDS_DIR}/${CI_PROJECT_NAMESPACE}/tine20/ci/phpstan/bootstrap.php ci/phpstan/
    # workaround: as running phpstan against tine20/$CUSTOMAPP_DIR fails, we need to run it against vendor/customapp. There for we need to remove tine20/vendor from the exclusion list
    - if test "${CI_PROJECT_NAME}" == "tine20"; then dir=tine20; else dir=tine20/vendor/$(cat ${CI_PROJECT_DIR}/composer.json | jq -r '.name')/lib; sed -i "/tine20\/vendor\*/d" $TINE20ROOT/phpstan.neon; fi
    - $TINE20ROOT/tine20/vendor/bin/phpstan --version
    - 'echo analysis target: $TINE20ROOT/$dir'
    - php -d memory_limit=2G $TINE20ROOT/tine20/vendor/bin/phpstan analyse --autoload-file=$TINE20ROOT/tine20/vendor/autoload.php --error-format=gitlab --no-progress -vvv $TINE20ROOT/$dir | tee ${CI_PROJECT_DIR}/code-quality-report.json
    # TODO remove that later
    - php -d memory_limit=2G $TINE20ROOT/tine20/vendor/bin/phpstan analyse --autoload-file=$TINE20ROOT/tine20/vendor/autoload.php --no-progress -vvv $TINE20ROOT/$dir
  artifacts:
    reports:
      codequality: ${CI_PROJECT_DIR}/code-quality-report.json
    paths:
      - ${CI_PROJECT_DIR}/code-quality-report.json
    expire_in: 1 days
  allow_failure: true
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $PHPSTAN_ANALYSES == "false"
      when: never
    - if: $PHPSTAN_ANALYSES == "true" && $PHPSTAN_ANALYSES_STRICT == "true"
      allow_failure: false
    - if: $PHPSTAN_ANALYSES == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $PHPSTAN_ANALYSES_MERGE_REQUEST != "false" && $PHPSTAN_ANALYSES_STRICT == "true"
      changes:
        paths:
          - "**/*.php"
      allow_failure: false
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $PHPSTAN_ANALYSES_MERGE_REQUEST != "false"
      changes:
        paths:
          - "**/*.php"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /phpstan-analysis/ && $PHPSTAN_ANALYSES_STRICT == "true"
      allow_failure: false
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /phpstan-analysis/
    - if: $CI_PIPELINE_SOURCE == "schedule" && $PHPSTAN_ANALYSES_SCHEDULE != "false" && $PHPSTAN_ANALYSES_STRICT == "true"
      allow_failure: false
    - if: $CI_PIPELINE_SOURCE == "schedule" && $PHPSTAN_ANALYSES_SCHEDULE != "false"
    - if: $CI_COMMIT_TAG && $PHPSTAN_ANALYSES_STRICT == "true"
      allow_failure: false
  timeout: 40m
  interruptible: true

parallel-lint-analysis:
  stage: test
  image: composer
  needs: []
  before_script:
    - composer require php-parallel-lint/php-parallel-lint=dev-master
  script:
    - if test "${CI_PROJECT_NAME}" == "tine20"; then dir=./tine20/; else dir=./lib/; fi
    - ./vendor/bin/parallel-lint --gitlab $dir | tee ${CI_PROJECT_DIR}/parallel-lint-report.json
  artifacts:
    reports:
      codequality: ${CI_PROJECT_DIR}/parallel-lint-report.json
  allow_failure: true
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $PARALLEL_LINT_ANALYSIS == "false"
      when: never
    - if: $PARALLEL_LINT_ANALYSIS == "true" && $PARALLEL_LINT_ANALYSIS_STRICT == "true"
      allow_failure: false
    - if: $PARALLEL_LINT_ANALYSIS == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $PARALLEL_LINT_ANALYSIS_MERGE_REQUEST != "false" && $PARALLEL_LINT_ANALYSIS_STRICT == "true"
      changes:
        paths:
          - "**/*.php"
      allow_failure: false
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $PARALLEL_LINT_ANALYSIS_MERGE_REQUEST != "false"
      changes:
        paths:
          - "**/*.php"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /parallel-lint-analysis/ && $PARALLEL_LINT_ANALYSIS_STRICT == "true"
      allow_failure: false
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /parallel-lint-analysis/
    - if: $CI_PIPELINE_SOURCE == "schedule" && $PARALLEL_LINT_ANALYSIS_SCHEDULE != "false" && $PARALLEL_LINT_ANALYSIS_STRICT == "true"
      allow_failure: false
    - if: $CI_PIPELINE_SOURCE == "schedule" && $PARALLEL_LINT_ANALYSIS_SCHEDULE != "false"
    - if: $CI_COMMIT_TAG && $PARALLEL_LINT_ANALYSIS_STRICT == "true"
      allow_failure: false
    - if: $CI_COMMIT_TAG
  timeout: 20m
  interruptible: true

phpcs-analysis:
  stage: test
  image: composer
  needs: []
  before_script:
    - composer require squizlabs/php_codesniffer
    - composer require micheh/phpcs-gitlab
  script:
    - if test "${CI_PROJECT_NAME}" == "tine20"; then dir=./tine20; else dir=./lib; fi
    - ./vendor/bin/phpcs -s --report=full --standard=PSR12
      --report-\\Micheh\\PhpCodeSniffer\\Report\\Gitlab=${CI_PROJECT_DIR}/phpcs-report.json $dir
      --exclude=PSR1.Classes.ClassDeclaration,Squiz.Classes.ValidClassName,PSR2.Classes.PropertyDeclaration,PSR2.Methods.MethodDeclaration
      --extensions=php
  artifacts:
    reports:
      codequality: ${CI_PROJECT_DIR}/phpcs-report.json
  allow_failure: true
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $PHPCS_ANALYSIS == "false"
      when: never
    - if: $PHPCS_ANALYSIS == "true" && $PHPCS_ANALYSIS_STRICT == "true"
      allow_failure: false
    - if: $PHPCS_ANALYSIS == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $PHPCS_ANALYSIS_MERGE_REQUEST == "true" && $PHPCS_ANALYSIS_STRICT == "true"
      allow_failure: false
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $PHPCS_ANALYSIS_MERGE_REQUEST == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /phpcs-analysis/ && $PHPCS_ANALYSIS_STRICT == "true"
      allow_failure: false
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /phpcs-analysis/
    - if: $CI_PIPELINE_SOURCE == "schedule" && $PHPCS_ANALYSIS_SCHEDULE != "false" && $PHPCS_ANALYSIS_STRICT == "true"
      allow_failure: false
    - if: $CI_PIPELINE_SOURCE == "schedule" && $PHPCS_ANALYSIS_SCHEDULE != "false"
    - if: $CI_COMMIT_TAG && $PHPCS_ANALYSIS_STRICT == "true"
      allow_failure: false
  timeout: 20m
  interruptible: true

test-with-health-check:
  extends: .abstract_jobs.php_unit
  variables:
    ARG_IMAGE: test-built
  stage: test
  timeout: 20m
  script:
    - sleep 120s
    - curl -v --fail http://127.0.0.1:80/health
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $TEST_WITH_HEALTH_CHECK == "false"
      when: never
    - if: $TEST_WITH_HEALTH_CHECK == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $TEST_WITH_HEALTH_CHECK_MERGE_REQUEST == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /test-with-health-check/
    - if: $CI_PIPELINE_SOURCE == "schedule" && $TEST_WITH_HEALTH_CHECK_SCHEDULE != "false"
    - if: $CI_COMMIT_TAG

test-install-demodata:
  extends: .abstract_jobs.php_unit
  variables:
    ARG_IMAGE: test-source
  stage: test
  timeout: 35m
  script:
    - test -f ${TINE20ROOT}/scripts/postInstallGitlab.sh && ${TINE20ROOT}/scripts/postInstallGitlab.sh
    - |
      if [ -z "$TINE_DEMODATASET" ]; then
        su tine20 -c "tine20.php --method Tinebase.createAllDemoData  --username=${TINE20_LOGIN_USERNAME} --password=${TINE20_LOGIN_PASSWORD}"
      else
        su tine20 -c "tine20.php --method Tinebase.createAllDemoData  --username=${TINE20_LOGIN_USERNAME} --password=${TINE20_LOGIN_PASSWORD}" -- demodata=set set=$TINE_DEMODATASET
      fi;
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $TEST_INSTALL_DEMODATA == "false"
      when: never
    - if: $TEST_INSTALL_DEMODATA == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $TEST_INSTALL_DEMODATA_MERGE_REQUEST == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /test-install-demodata/
    - if: $CI_PIPELINE_SOURCE == "schedule" && $TEST_INSTALL_DEMODATA_SCHEDULE != "false"