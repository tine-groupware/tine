# todo: should run ob build image and on test images after they are build
# check-php-version:
#   extends: .abstract_jobs.copy_source
#   stage: test
#   variables:
#     ARG_IMAGE: test-source
#   needs:
#     - docker_build_source
#   script:
#     - echo "PHP version shoud be ${PHP_VERSION}."
#     - php -r "echo 'PHP version is'.PHP_MAJOR_VERSION.'.'.PHP_MINOR_VERSION;"
#     - php -r "if (version_compare(PHP_MAJOR_VERSION.'.'.PHP_MINOR_VERSION, '${PHP_VERSION}', '!=')) exit(1);"
#   rules:
#     - if: $RUN_NO_TESTS == "true"
#       when: never
#     - if: $CHECK_PHP_VERSION == "never"
#       when: never
#     - if: $RUN_ALL_TESTS == "true"
#       when: on_success
#     - if: $CHECK_PHP_VERSION == "true"
#       when: on_success
#     - when: never
#   rules:
#     - if: $RUN_NO_TESTS == "true"
#       when: never
#     - if: $CHECK_PHP_VERSION == "false"
#       when: never
#     - if: $CHECK_PHP_VERSION == "true"
#     - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CHECK_PHP_VERSION_MERGE_REQUEST == "true"
#     - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /test-with-health-check/
#     - if: $PIPELINE_TYPE =~ /default-tests/
#     - if: $PIPELINE_TYPE =~ /mr-tests/
#     - if: $CI_COMMIT_TAG
#   allow_failure: true
#   timeout: 20m # time run: 4m
#   interruptible: true

phpstan-analysis:
  stage: test
  image: ${TEST_IMAGE}
  tags:
    - custom-cache
  variables:
    KUBERNETES_CPU_REQUEST: 2
    KUBERNETES_CPU_LIMIT: 2
    # request and memory limit should be 2Gi(php memory_limit) per cpu
    KUBERNETES_MEMORY_REQUEST: 4Gi
    KUBERNETES_MEMORY_LIMIT: 4Gi
    TINE20ROOT: ${CI_BUILDS_DIR}/${CI_PROJECT_NAMESPACE}/tine20
  needs: []
  script:
    - !reference [.lib, script]
    - test_prepare_working_dir
    - test_composer_install
    - phpstan_analyse
  artifacts:
    reports:
      codequality: ${CI_PROJECT_DIR}/code-quality-report.json
    paths:
      - ${CI_PROJECT_DIR}/code-quality-report.json
    expire_in: 1 days
  allow_failure: true
  # note: composer home cache is as faster than caching the vendor dir. 27s-33s vs 33s-45s
  # todo: maybe remove this fully or try to improve gitlab cache speed. Saving cache needs time 10s... => policy  pull
  # design note: composer home cache is custom and more complex, but it is needed any way for custom apps.
  # cache:
  #   - key:
  #       files:
  #         - tine20/composer.lock
  #     paths:
  #       - tine20/vendor
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /phpstan-analysis/ && $PHPSTAN_ANALYSES_STRICT == "true"
      allow_failure: false
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /phpstan-analysis/
    - if: $PHPSTAN_ANALYSES == "false"
      when: never
    - if: $PHPSTAN_ANALYSES == "true" && $PHPSTAN_ANALYSES_STRICT == "true"
      allow_failure: false
    - if: $PHPSTAN_ANALYSES == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $PHPSTAN_ANALYSES_MERGE_REQUEST != "false" && $PHPSTAN_ANALYSES_STRICT == "true"
      changes:
        paths:
          - "**/*.php"
          - "tine20/composer.*"
      allow_failure: false
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $PHPSTAN_ANALYSES_MERGE_REQUEST != "false"
      changes:
        paths:
          - "**/*.php"
          - "tine20/composer.*"
    - if: $PIPELINE_TYPE =~ /default-tests/ && $PHPSTAN_ANALYSES_STRICT == "true"
      allow_failure: false
    - if: $PIPELINE_TYPE =~ /default-tests/
    - if: $PIPELINE_TYPE =~ /mr-tests/ && $PHPSTAN_ANALYSES_STRICT == "true"
      allow_failure: false
    - if: $PIPELINE_TYPE =~ /mr-tests/
    - if: $CI_COMMIT_TAG && $PHPSTAN_ANALYSES_STRICT == "true"
      allow_failure: false
    - if: $CI_COMMIT_TAG
  timeout: 60m
  interruptible: true

parallel-lint-analysis:
  stage: test
  image: composer
  needs: []
  before_script:
    - composer require php-parallel-lint/php-parallel-lint=dev-master
  script:
    - if test "${CI_PROJECT_NAME}" == "tine20"; then dir=./tine20/; else dir=./lib/; fi
    - ./vendor/bin/parallel-lint --gitlab $dir | tee ${CI_PROJECT_DIR}/parallel-lint-report.json
  artifacts:
    reports:
      codequality: ${CI_PROJECT_DIR}/parallel-lint-report.json
  allow_failure: true
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $PARALLEL_LINT_ANALYSIS == "false"
      when: never
    - if: $PARALLEL_LINT_ANALYSIS == "true" && $PARALLEL_LINT_ANALYSIS_STRICT == "true"
      allow_failure: false
    - if: $PARALLEL_LINT_ANALYSIS == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $PARALLEL_LINT_ANALYSIS_MERGE_REQUEST != "false" && $PARALLEL_LINT_ANALYSIS_STRICT == "true"
      changes:
        paths:
          - "**/*.php"
      allow_failure: false
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $PARALLEL_LINT_ANALYSIS_MERGE_REQUEST != "false"
      changes:
        paths:
          - "**/*.php"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /parallel-lint-analysis/ && $PARALLEL_LINT_ANALYSIS_STRICT == "true"
      allow_failure: false
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /parallel-lint-analysis/
    - if: $PIPELINE_TYPE =~ /default-tests/ && $PARALLEL_LINT_ANALYSIS_STRICT == "true"
      allow_failure: false
    - if: $PIPELINE_TYPE =~ /default-tests/
    - if: $PIPELINE_TYPE =~ /mr-tests/ && $PARALLEL_LINT_ANALYSIS_STRICT == "true"
      allow_failure: false
    - if: $PIPELINE_TYPE =~ /mr-tests/
    - if: $CI_COMMIT_TAG && $PARALLEL_LINT_ANALYSIS_STRICT == "true"
      allow_failure: false
    - if: $CI_COMMIT_TAG
  timeout: 20m
  interruptible: true

phpcs-analysis:
  stage: test
  image: composer
  needs: []
  before_script:
    - composer require squizlabs/php_codesniffer --no-interaction
    - composer require micheh/phpcs-gitlab --no-interaction
    - composer config --no-plugins allow-plugins.digitalrevolution/php-codesniffer-baseline true
    - composer require digitalrevolution/php-codesniffer-baseline --no-interaction
  script:
    - if test "${CI_PROJECT_NAME}" == "tine20"; then dir=./tine20; else dir=./lib; fi
    - cp tine20/phpcs.baseline.xml phpcs.baseline.xml
    - >
      php vendor/bin/phpcs -s --standard=PSR12 --report=full --report-\\Micheh\\PhpCodeSniffer\\Report\\Gitlab=${CI_PROJECT_DIR}/phpcs-report.json
      --exclude=PSR1.Classes.ClassDeclaration,Squiz.Classes.ValidClassName,PSR2.Classes.PropertyDeclaration,PSR2.Methods.MethodDeclaration
      --extensions=php --ignore=vendor,library,Tinebase/views/autodiscover --basepath=./tine20 $dir
  artifacts:
    reports:
      codequality: ${CI_PROJECT_DIR}/phpcs-report.json
  allow_failure: true
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $PHPCS_ANALYSIS == "false"
      when: never
    - if: $PHPCS_ANALYSIS == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $PHPCS_ANALYSIS_MERGE_REQUEST != "false"
      changes:
        paths:
          - "**/*.php"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /phpcs-analysis/
    - if: $PIPELINE_TYPE =~ /default-tests/
    - if: $PIPELINE_TYPE =~ /mr-tests/
    - if: $CI_COMMIT_TAG
      allow_failure: true
  timeout: 20m
  interruptible: true

test-with-health-check:
  extends: .abstract_jobs.php_unit
  variables:
    ARG_IMAGE: test-built
  stage: test
  timeout: 20m
  script:
    - sleep 120s
    - curl -v --fail http://127.0.0.1:80/health
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $TEST_WITH_HEALTH_CHECK == "false"
      when: never
    - if: $TEST_WITH_HEALTH_CHECK == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $TEST_WITH_HEALTH_CHECK_MERGE_REQUEST == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /test-with-health-check/
    - if: $PIPELINE_TYPE =~ /default-tests/
    - if: $CI_COMMIT_TAG

test-install-demodata:
  extends: .abstract_jobs.php_unit_cache
  stage: test
  needs: []
  timeout: 35m
  script:
    - test -f ${TINE20ROOT}/scripts/postInstallGitlab.sh && ${TINE20ROOT}/scripts/postInstallGitlab.sh
    - |
      if [ -z "$TINE_DEMODATASET" ]; then
        su tine20 -c "tine20.php --method Tinebase.createAllDemoData  --username=${TINE20_LOGIN_USERNAME} --password=${TINE20_LOGIN_PASSWORD}"
      else
        su tine20 -c "tine20.php --method Tinebase.createAllDemoData  --username=${TINE20_LOGIN_USERNAME} --password=${TINE20_LOGIN_PASSWORD}" -- demodata=set set=$TINE_DEMODATASET
      fi;
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $TEST_INSTALL_DEMODATA == "false"
      when: never
    - if: $TEST_INSTALL_DEMODATA == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $TEST_INSTALL_DEMODATA_MERGE_REQUEST == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /test-install-demodata/
    - if: $PIPELINE_TYPE =~ /default-tests/